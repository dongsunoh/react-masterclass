<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="fc427109-75a3-407e-b2bb-ffa48aa4b658" name="Changes" comment="Typescript (Typing the Props)&#10; - Component의 props에 type을 전달하는 방법 &#10;   &gt; Typescript interface 선언을 통해 어떤 타입인지 정의.&#10;   &gt; 해당 변수가 어떤 타입인지 선언해서 사용 함. function ({bgColor} : CircleProps) or styled.div&lt;ContainerProps&gt;로 사용.">
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/App.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/src/App.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/Circle.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/src/Circle.tsx" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="ChangesViewManager">
    <option name="groupingKeys">
      <option value="directory" />
      <option value="module" />
      <option value="repository" />
    </option>
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="TypeScript File" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="GitHubPullRequestSearchHistory"><![CDATA[{
  "lastFilter": {
    "state": "OPEN",
    "assignee": "dongsunoh"
  }
}]]></component>
  <component name="GithubPullRequestsUISettings"><![CDATA[{
  "selectedUrlAndAccountId": {
    "url": "https://github.com/dongsunoh/react-masterclass",
    "accountId": "f5a91d83-dd34-490f-8268-89dcb1087dcc"
  }
}]]></component>
  <component name="KubernetesApiPersistence"><![CDATA[{}]]></component>
  <component name="KubernetesApiProvider"><![CDATA[{
  "isMigrated": true
}]]></component>
  <component name="ProblemsViewState">
    <option name="selectedTabId" value="ProjectErrors" />
  </component>
  <component name="ProjectColorInfo"><![CDATA[{
  "customColor": "",
  "associatedIndex": 5
}]]></component>
  <component name="ProjectId" id="30XRWvvIB5pTQE7wwXkzLXriCU8" />
  <component name="ProjectViewState">
    <option name="autoscrollFromSource" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "ModuleVcsDetector.initialDetectionPerformed": "true",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "RunOnceActivity.git.unshallow": "true",
    "git-widget-placeholder": "master",
    "node.js.detected.package.eslint": "true",
    "node.js.detected.package.tslint": "true",
    "node.js.selected.package.eslint": "(autodetect)",
    "node.js.selected.package.tslint": "(autodetect)",
    "nodejs_package_manager_path": "npm",
    "npm.start.executor": "Run",
    "settings.editor.selected.configurable": "preferences.rainbow.brackets.lite",
    "ts.external.directory.path": "C:\\dev\\intellij_workspace\\react-masterclass\\node_modules\\typescript\\lib",
    "vue.rearranger.settings.migration": "true"
  }
}]]></component>
  <component name="RunManager">
    <configuration name="start" type="js.build_tools.npm" nameIsGenerated="true">
      <package-json value="$PROJECT_DIR$/package.json" />
      <command value="run" />
      <scripts>
        <script value="start" />
      </scripts>
      <node-interpreter value="project" />
      <envs />
      <method v="2" />
    </configuration>
  </component>
  <component name="SharedIndexes">
    <attachedChunks>
      <set>
        <option value="bundled-jdk-9823dce3aa75-fbdcb00ec9e3-intellij.indexing.shared.core-IU-251.27812.49" />
        <option value="bundled-js-predefined-d6986cc7102b-09060db00ec0-JavaScript-IU-251.27812.49" />
      </set>
    </attachedChunks>
  </component>
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="fc427109-75a3-407e-b2bb-ffa48aa4b658" name="Changes" comment="" />
      <created>1753771967258</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1753771967258</updated>
      <workItem from="1753771968694" duration="11822000" />
    </task>
    <task id="LOCAL-00001" summary="Typescript를 사용할 수 있는 react app 프로젝트 생성">
      <option name="closed" value="true" />
      <created>1753772646612</created>
      <option name="number" value="00001" />
      <option name="presentableId" value="LOCAL-00001" />
      <option name="project" value="LOCAL" />
      <updated>1753772646612</updated>
    </task>
    <task id="LOCAL-00002" summary="Typescript를 사용할 수 있는 react app 프로젝트 생성하여 직전 소스 코드 정상적으로 작동되도록 수정&#10; - props:any 방식은 타입 안전성이 사라지기 때문에 비추천 함.">
      <option name="closed" value="true" />
      <created>1753781219553</created>
      <option name="number" value="00002" />
      <option name="presentableId" value="LOCAL-00002" />
      <option name="project" value="LOCAL" />
      <updated>1753781219553</updated>
    </task>
    <task id="LOCAL-00003" summary="Typescript (Typing the Props)&#10; - Component의 props에 type을 전달하는 방법 &#10;   &gt; Typescript interface 선언을 통해 어떤 타입인지 정의.&#10;   &gt; 해당 변수가 어떤 타입인지 선언해서 사용 함. function ({bgColor} : CircleProps) or styled.div&lt;ContainerProps&gt;로 사용.">
      <option name="closed" value="true" />
      <created>1753785012241</created>
      <option name="number" value="00003" />
      <option name="presentableId" value="LOCAL-00003" />
      <option name="project" value="LOCAL" />
      <updated>1753785012241</updated>
    </task>
    <option name="localTasksCounter" value="4" />
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="Typescript를 사용할 수 있는 react app 프로젝트 생성" />
    <MESSAGE value="Typescript를 사용할 수 있는 react app 프로젝트 생성하여 직전 소스 코드 정상적으로 작동되도록 수정&#10; - props:any 방식은 타입 안전성이 사라지기 때문에 비추천 함." />
    <MESSAGE value="Typescript (Typing the Props)&#10; - Component의 props에 type을 전달하는 방법 &#10;   &gt; Typescript interface 선언을 통해 어떤 타입인지 정의.&#10;   &gt; 해당 변수가 어떤 타입인지 선언해서 사용 함. function ({bgColor} : CircleProps) or styled.div&lt;ContainerProps&gt;로 사용." />
    <option name="LAST_COMMIT_MESSAGE" value="Typescript (Typing the Props)&#10; - Component의 props에 type을 전달하는 방법 &#10;   &gt; Typescript interface 선언을 통해 어떤 타입인지 정의.&#10;   &gt; 해당 변수가 어떤 타입인지 선언해서 사용 함. function ({bgColor} : CircleProps) or styled.div&lt;ContainerProps&gt;로 사용." />
  </component>
</project>